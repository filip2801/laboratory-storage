plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'groovy'
	id 'com.avast.gradle.docker-compose' version '0.17.4'
	id 'jacoco'
	id 'pmd'
}
apply plugin: 'docker-compose'

group = 'com.filip2801'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.flywaydb:flyway-core:9.21.1'

	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
	testImplementation 'org.spockframework:spock-spring:2.3-groovy-4.0'
	testImplementation "org.testcontainers:postgresql:1.18.3"

}

tasks.named('test') {
	useJUnitPlatform()
}

dockerCompose {
	useComposeFiles = ['docker-compose.yml']
}

dockerCompose.isRequiredBy(bootRun)

test {
	finalizedBy jacocoTestReport
	finalizedBy jacocoTestCoverageVerification
}

jacocoTestReport {
	dependsOn test
	reports {
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.90
			}
		}
	}
}
